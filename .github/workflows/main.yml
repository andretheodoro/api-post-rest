name: Build and Push Docker Image

on:
    push:
        branches:
            - develop

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        env:
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}

        steps:
            - name: Checar o Repositório
              uses: actions/checkout@v4

            - name: Configurar o Docker
              run: |
                  docker login -u $DOCKER_USERNAME --password $DOCKER_PASSWORD
                  docker build -t $DOCKER_USERNAME/posts-api:latest --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} .
                  docker push $DOCKER_USERNAME/posts-api:latest
            - name: Configurar Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20' # ou a versão que você está usando

            - name: Instalar Dependências
              run: npm install # ou o comando correspondente ao seu gerenciador de pacotes

            - name: Definir Variáveis de Ambiente
              run: |
                  echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
                  echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> $GITHUB_ENV
                  echo "NODE_ENV_TEST=${{ secrets.NODE_ENV_TEST }}" >> $GITHUB_ENV
                  echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
                  echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
                  echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
                  echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
                  echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
                  echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
            - name: Executar Testes
              run: npm test # ou o comando que você usa para rodar os testes

    create-pull-request:
        runs-on: ubuntu-latest
        needs: build-and-test
        if: success()

        steps:
            - name: Checkout do repositório
              uses: actions/checkout@v2

            - name: Configurar Git
              run: |
                  git config --global user.name 'github-actions'
                  git config --global user.email '${{ secrets.EMAIL_PULLREQUEST }}'
            - name: Criar Pull Request
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  curl -X POST -H "Authorization: token $GITHUB_TOKEN" \
                  -H "Accept: application/vnd.github.v3+json" \
                  https://api.github.com/repos/${{ github.repository }}/pulls \
                  -d '{
                    "title": "Merge de develop para main",
                    "head": "develop",
                    "base": "main",
                    "body": "Pull request gerado automaticamente após os testes passarem."
                  }'
